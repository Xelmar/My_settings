From 0e4b799a478ef4a810e799ed51272220c17708d0 Mon Sep 17 00:00:00 2001
From: oblique <psyberbits@gmail.com>
Date: Thu, 24 Aug 2017 09:06:48 +0300
Subject: [PATCH] change i3locks colors to my taste

---
 i3lock.c           |  2 +-
 unlock_indicator.c | 37 +++++++++++++------------------------
 2 files changed, 14 insertions(+), 25 deletions(-)

diff --git a/i3lock.c b/i3lock.c
index 87a77b1..8d73597 100644
--- a/i3lock.c
+++ b/i3lock.c
@@ -52,7 +52,7 @@
 typedef void (*ev_callback_t)(EV_P_ ev_timer *w, int revents);
 static void input_done(void);
 
-char color[7] = "ffffff";
+char color[7] = "101010";
 uint32_t last_resolution[2];
 xcb_window_t win;
 static xcb_cursor_t cursor;
diff --git a/unlock_indicator.c b/unlock_indicator.c
index 4c7d0e9..cf0c827 100644
--- a/unlock_indicator.c
+++ b/unlock_indicator.c
@@ -152,40 +152,26 @@ xcb_pixmap_t draw_image(uint32_t *resolution) {
                   0 /* start */,
                   2 * M_PI /* end */);
 
-        /* Use the appropriate color for the different PAM states
-         * (currently verifying, wrong password, or default) */
-        switch (auth_state) {
-            case STATE_AUTH_VERIFY:
-            case STATE_AUTH_LOCK:
-                cairo_set_source_rgba(ctx, 0, 114.0 / 255, 255.0 / 255, 0.75);
-                break;
-            case STATE_AUTH_WRONG:
-            case STATE_I3LOCK_LOCK_FAILED:
-                cairo_set_source_rgba(ctx, 250.0 / 255, 0, 0, 0.75);
-                break;
-            default:
-                cairo_set_source_rgba(ctx, 0, 0, 0, 0.75);
-                break;
-        }
+        cairo_set_source_rgb(ctx, 0x10/255.0, 0x10/255.0, 0x10/255.0);
         cairo_fill_preserve(ctx);
 
         switch (auth_state) {
             case STATE_AUTH_VERIFY:
             case STATE_AUTH_LOCK:
-                cairo_set_source_rgb(ctx, 51.0 / 255, 0, 250.0 / 255);
+                cairo_set_source_rgb(ctx, 0x5f/255.0, 0x87/255.0, 0xd7/255.0);
                 break;
             case STATE_AUTH_WRONG:
             case STATE_I3LOCK_LOCK_FAILED:
-                cairo_set_source_rgb(ctx, 125.0 / 255, 51.0 / 255, 0);
+                cairo_set_source_rgb(ctx, 0xcb/255.0, 0x00/255.0, 0x52/255.0);
                 break;
             case STATE_AUTH_IDLE:
-                cairo_set_source_rgb(ctx, 51.0 / 255, 125.0 / 255, 0);
+                cairo_set_source_rgb(ctx, 0x66/255.0, 0xff/255.0, 0x66/255.0);
                 break;
         }
         cairo_stroke(ctx);
 
         /* Draw an inner seperator line. */
-        cairo_set_source_rgb(ctx, 0, 0, 0);
+        cairo_set_source_rgb(ctx, 0x10/255.0, 0x10/255.0, 0x10/255.0);
         cairo_set_line_width(ctx, 2.0);
         cairo_arc(ctx,
                   BUTTON_CENTER /* x */,
@@ -202,18 +188,21 @@ xcb_pixmap_t draw_image(uint32_t *resolution) {
         /* We don't want to show more than a 3-digit number. */
         char buf[4];
 
-        cairo_set_source_rgb(ctx, 0, 0, 0);
+        cairo_set_source_rgb(ctx, 0x10/255.0, 0x10/255.0, 0x10/255.0);
         cairo_select_font_face(ctx, "sans-serif", CAIRO_FONT_SLANT_NORMAL, CAIRO_FONT_WEIGHT_NORMAL);
         cairo_set_font_size(ctx, 28.0);
         switch (auth_state) {
             case STATE_AUTH_VERIFY:
                 text = "verifying…";
+                cairo_set_source_rgb(ctx, 0x5f/255.0, 0x87/255.0, 0xd7/255.0);
                 break;
             case STATE_AUTH_LOCK:
                 text = "locking…";
+                cairo_set_source_rgb(ctx, 0xcb/255.0, 0x00/255.0, 0x52/255.0);
                 break;
             case STATE_AUTH_WRONG:
                 text = "wrong!";
+                cairo_set_source_rgb(ctx, 0xcb/255.0, 0x00/255.0, 0x52/255.0);
                 break;
             case STATE_I3LOCK_LOCK_FAILED:
                 text = "lock failed!";
@@ -226,7 +215,7 @@ xcb_pixmap_t draw_image(uint32_t *resolution) {
                         snprintf(buf, sizeof(buf), "%d", failed_attempts);
                         text = buf;
                     }
-                    cairo_set_source_rgb(ctx, 1, 0, 0);
+                    cairo_set_source_rgb(ctx, 0xcb/255.0, 0x00/255.0, 0x52/255.0);
                     cairo_set_font_size(ctx, 32.0);
                 }
                 break;
@@ -275,16 +264,16 @@ xcb_pixmap_t draw_image(uint32_t *resolution) {
                       highlight_start + (M_PI / 3.0));
             if (unlock_state == STATE_KEY_ACTIVE) {
                 /* For normal keys, we use a lighter green. */
-                cairo_set_source_rgb(ctx, 51.0 / 255, 219.0 / 255, 0);
+                cairo_set_source_rgb(ctx, 0x5f/255.0, 0x87/255.0, 0xd7/255.0);
             } else {
                 /* For backspace, we use red. */
-                cairo_set_source_rgb(ctx, 219.0 / 255, 51.0 / 255, 0);
+                cairo_set_source_rgb(ctx, 0xcb/255.0, 0x00/255.0, 0x52/255.0);
             }
             cairo_stroke(ctx);
 
             /* Draw two little separators for the highlighted part of the
              * unlock indicator. */
-            cairo_set_source_rgb(ctx, 0, 0, 0);
+            cairo_set_source_rgb(ctx, 0x10/255.0, 0x10/255.0, 0x10/255.0);
             cairo_arc(ctx,
                       BUTTON_CENTER /* x */,
                       BUTTON_CENTER /* y */,
-- 
2.13.4

